{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-telephone-filter.min.js","webpack:///webpack/bootstrap 70e724352f56dc4f7cc9","webpack:///./src/index.js","webpack:///./src/telephone.filter.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_telephone","angular","filter","TelephoneFilter","tel","method","maxLength","cityCodeLength","numberLength","longDistanceCode","undefined","value","toString","trim","replace","length","charAt","substring","city","number","slice","Object","defineProperty"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,8BAAAH,GACA,gBAAAC,SACAA,QAAA,4BAAAD,IAEAD,EAAA,4BAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/B,YAEA,IAAIS,GAAaT,EAAoB,EExDtCU,SAAQf,OAAO,yBACVgB,OAAO,cAAaF,EAHhBG,kBFgEH,SAASjB,EAAQD,GAEtB,YGlEM,SAASkB,KAeZ,QAASD,GAAOE,EAAKC,GACjB,GAAMC,GAAY,GACZC,EAAiB,EACjBC,EAAe,EACjBC,EAAgBC,MAGpB,KAAKN,EACD,MAAO,EAIX,IAAIO,GAAQP,EAAIQ,WAAWC,OAAOC,QAAQ,MAAO,GAmBjD,IAhBIH,EAAMI,OAAST,IAGS,MAApBK,EAAMK,OAAO,IAEbP,EAAmBE,EAAMK,OAAO,GAGhCL,EAAQA,EAAMM,UAAU,EAAGX,EAAY,IAEvCK,EAAQA,EAAMM,UAAU,EAAGX,KAM9BD,EACD,MAAO,wDAMX,IAAe,UAAXA,EACA,MAAOM,EAMX,IAAe,WAAXN,EAAqB,CAErB,GAAIa,GAAIR,OACJS,EAAMT,MAEV,QAAQC,EAAMI,QACd,IAAK,GACL,IAAK,GACL,IAAK,GACDG,EAAOP,CACP,MAEJ,SACIO,EAAOP,EAAMS,MAAM,EAAGb,GACtBY,EAASR,EAAMS,MAAMb,GAGzB,MAAIY,IAIIA,EAFAA,EAAOJ,OAASR,EAEPY,EAAOC,MAAM,EAAGb,GAAkB,IACvCY,EAAOC,MAAMb,EAAgBC,GAIxBW,GAILV,EAAmBA,EAAmB,IAAM,KAC/C,IAAMS,EAAO,KAAOC,GAAQN,QAI1B,IAAMK,GA5FzB,MAAOhB,GHiEVmB,OAAOC,eAAerC,EAAS,cAC3B0B,OAAO,IAEX1B,EGvEekB","file":"angular-telephone-filter.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-telephone-filter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-telephone-filter\"] = factory();\n\telse\n\t\troot[\"angular-telephone-filter\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-telephone-filter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-telephone-filter\"] = factory();\n\telse\n\t\troot[\"angular-telephone-filter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _telephone = __webpack_require__(1);\n\t\n\tangular.module('bc.TelephoneFilter', []).filter('bcTelephone', _telephone.TelephoneFilter);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.TelephoneFilter = TelephoneFilter;\n\tfunction TelephoneFilter() {\n\t\n\t    return filter;\n\t\n\t    /**\n\t     * Clean or format a telephone number\n\t     *\n\t     * @param {String} number\n\t     * @param {String} method\n\t     * @return {String} finalNumber\n\t     */\n\t    function filter(tel, method) {\n\t        var maxLength = 10;\n\t        var cityCodeLength = 3;\n\t        var numberLength = 7;\n\t        var longDistanceCode = undefined;\n\t\n\t        // Return if no number was passed in\n\t        if (!tel) {\n\t            return '';\n\t        }\n\t\n\t        // Strip all non-numeric characters\n\t        var value = tel.toString().trim().replace(/\\D/g, '');\n\t\n\t        // Trim to verify the model doesn't get any larger\n\t        if (value.length > maxLength) {\n\t\n\t            // If the first character is a US country code\n\t            if (value.charAt(0) === '1') {\n\t                // Save the code\n\t                longDistanceCode = value.charAt(0);\n\t\n\t                // Don't strip it, allow 11 digits\n\t                value = value.substring(1, maxLength + 1);\n\t            } else {\n\t                value = value.substring(0, maxLength);\n\t            }\n\t        }\n\t\n\t        // Return if no method was passed in\n\t        if (!method) {\n\t            return 'A method{string} is required. e.g. \\'clean\\' or \\'format\\'';\n\t        }\n\t\n\t        //\n\t        // Clean a phone number\n\t        if (method === 'clean') {\n\t            return value;\n\t        }\n\t\n\t        //\n\t        // Format a phone number\n\t        if (method === 'format') {\n\t\n\t            var city = undefined;\n\t            var number = undefined;\n\t\n\t            switch (value.length) {\n\t                case 1:\n\t                case 2:\n\t                case 3:\n\t                    city = value;\n\t                    break;\n\t\n\t                default:\n\t                    city = value.slice(0, cityCodeLength);\n\t                    number = value.slice(cityCodeLength);\n\t            }\n\t\n\t            if (number) {\n\t\n\t                if (number.length > cityCodeLength) {\n\t\n\t                    number = number.slice(0, cityCodeLength) + '-' + number.slice(cityCodeLength, numberLength);\n\t                } else {\n\t\n\t                    number = number;\n\t                }\n\t\n\t                return (longDistanceCode ? longDistanceCode + ' ' : '') + ('(' + city + ') ' + number).trim();\n\t            } else {\n\t\n\t                return '(' + city;\n\t            }\n\t        }\n\t    }\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-telephone-filter.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 70e724352f56dc4f7cc9\n **/","import { TelephoneFilter } from './telephone.filter';\n\nangular.module('bc.TelephoneFilter', [])\n    .filter('bcTelephone', TelephoneFilter)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","export function TelephoneFilter() {\n\n\n    return filter;\n\n\n\n\n    /**\n     * Clean or format a telephone number\n     *\n     * @param {String} number\n     * @param {String} method\n     * @return {String} finalNumber\n     */\n    function filter(tel, method) {\n        const maxLength = 10;\n        const cityCodeLength = 3;\n        const numberLength = 7;\n        let longDistanceCode;\n\n        // Return if no number was passed in\n        if (!tel) {\n            return '';\n        }\n\n        // Strip all non-numeric characters\n        let value = tel.toString().trim().replace(/\\D/g, '');\n\n        // Trim to verify the model doesn't get any larger\n        if (value.length > maxLength) {\n\n            // If the first character is a US country code\n            if (value.charAt(0) === '1') {\n                // Save the code\n                longDistanceCode = value.charAt(0);\n\n                // Don't strip it, allow 11 digits\n                value = value.substring(1, maxLength + 1);\n            } else {\n                value = value.substring(0, maxLength);\n            }\n\n        }\n\n        // Return if no method was passed in\n        if (!method) {\n            return 'A method{string} is required. e.g. \\'clean\\' or \\'format\\'';\n        }\n\n\n        //\n        // Clean a phone number\n        if (method === 'clean') {\n            return value;\n        }\n\n\n        //\n        // Format a phone number\n        if (method === 'format') {\n\n            let city;\n            let number;\n\n            switch (value.length) {\n            case 1:\n            case 2:\n            case 3:\n                city = value;\n                break;\n\n            default:\n                city = value.slice(0, cityCodeLength);\n                number = value.slice(cityCodeLength);\n            }\n\n            if (number) {\n\n                if (number.length > cityCodeLength) {\n\n                    number = number.slice(0, cityCodeLength) + '-' +\n                        number.slice(cityCodeLength, numberLength);\n\n                } else {\n\n                    number = number;\n\n                }\n\n                return (longDistanceCode ? longDistanceCode + ' ' : '') +\n                    ('(' + city + ') ' + number).trim();\n\n            } else {\n\n                return '(' + city;\n\n            }\n\n        }\n\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/telephone.filter.js\n **/"],"sourceRoot":""}